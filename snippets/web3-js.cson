'.source.js':
    'web3':
        'prefix': 'web3'
        'body': 'web3'
    'web3.version.api':
        'prefix': 'web3.version.api'
        'body': 'web3.version.api;$0'
    'web3.version.node':
        'prefix': 'web3.version.node'
        'body': 'web3.version.node;$0'
    'web3.version.getNode':
        'prefix': 'web3.version.getNode'
        'body': """
            web3.version.getNode(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.version.network':
        'prefix': 'web3.version.network'
        'body': 'web3.version.network;$0'
    'web3.version.getNetwork':
        'prefix': 'web3.version.getNetwork'
        'body': """
            web3.version.getNetwork(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.version.ethereum':
        'prefix': 'web3.version.ethereum'
        'body': 'web3.version.ethereum;$0'
    'web3.version.whisper':
        'prefix': 'web3.version.whisper'
        'body': 'web3.version.whisper;$0'
    'web3.version.getWhisper':
        'prefix': 'web3.version.getWhisper'
        'body': """
            web3.version.getWhisper(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.isConnected':
        'prefix': 'web3.isConnected'
        'body': "web3.isConnected();$0"
    'web3.setProvider':
        'prefix': 'web3.setProvider',
        'body': 'web3.setProvider(${1:new web3.providers.HttpProvider("http://${2:localhost}:${3:8545}")});$0'
    'web3.currentProvider':
        'prefix': 'web3.currentProvider'
        'body': 'web3.currentProvider;$0'
    'web3.reset':
        'prefix': 'web3.reset'
        'body': 'web3.reset(${1:true});$0'
    'web3.sha3':
        'prefix': 'web3.sha3'
        'body': 'web3.sha3(${1:string}${2:, {${3: encoding: "hex"}}});$0'
    'web3.toHex':
        'prefix': 'web3.toHex'
        'body': 'web3.toHex(${1:value});$0'
    'web3.toAscii':
        'prefix': 'web3.toAscii'
        'body': 'web3.toAscii(${1:hexString});$0'
    'web3.fromAscii':
        'prefix': 'web3.fromAscii'
        'body': 'web3.fromAscii(${1:asciiString}${2:, ${3:numberOfBytes}});$0'
    'web3.toDecimal':
        'prefix': 'web3.toDecimal'
        'body': 'web3.toDecimal(${1:hexString});$0'
    'web3.fromDecimal':
        'prefix': 'web3.fromDecimal'
        'body': 'web3.fromDecimal(${1:number});$0'
    'web3.fromWei':
        'prefix': 'web3.fromWei'
        'body': 'web3.fromWei(${2:number}, ${1:unit});$0'
        'description': 'unit: "kwei","mwei","gwei","szabo","finney","ether","kether","mether","gether","tether"'
    'web3.toWei':
        'prefix': 'web3.toWei'
        'body': 'web3.toWei(${2:number}, ${1:unit});$0'
        'description': 'unit: "kwei","mwei","gwei","szabo","finney","ether","kether","mether","gether","tether"'
    'web3.toBigNumber':
        'prefix': 'web3.toBigNumber'
        'body': 'web3.toBigNumber(${1:numOrHexString});$0'
    'web3.isAddress':
        'prefix': 'web3.isAddress'
        'body': 'web3.isAddress(${1:hexString});$0'
    'web3.net.listening':
        'prefix': 'web3.net.listening'
        'body': 'web3.net.listening;$0'
    'web3.net.getListening':
        'prefix': 'web3.net.getListening'
        'body': """
            web3.net.getListening(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.net.peerCount':
        'prefix': 'web3.net.peerCount'
        'body': 'web3.net.peerCount;$0'
    'web3.net.getPeerCount':
        'prefix': 'web3.net.getPeerCount'
        'body': """
            web3.net.getPeerCount(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.eth.defaultAccount':
        'prefix': 'web3.eth.defaultAccount'
        'body': 'web3.eth.defaultAccount;$0'
    'web3.eth.defaultBlock':
        'prefix': 'web3.eth.defaultBlock'
        'body': 'web3.eth.defaultBlock;$0'
    'web3.eth.syncing':
        'prefix': 'web3.eth.syncing'
        'body': 'web3.eth.syncing;$0'
    'web3.eth.getSyncing':
        'prefix': 'web3.eth.getSyncing'
        'body': """
            web3.eth.getSyncing(function (err, result) {
                ${1://your code}
            });$0
        """
    'web3.eth.isSyncing':
        'prefix': 'web3.eth.isSyncing'
        'body': """
            web3.eth.isSyncing(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.eth.coinbase':
        'prefix': 'web3.eth.coinbase'
        'body': 'web3.eth.coinbase;$0'
    'web3.eth.getCoinbase':
        'prefix': 'web3.eth.getCoinbase'
        'body': """
            web3.eth.getCoinbase(function (err, result) {
                ${1://your code}
            });$0
        """
    'web3.eth.mining':
        'prefix': 'web3.eth.mining'
        'body': 'web3.eth.mining;$0'
    'web3.eth.getMining':
        'prefix': 'web3.eth.getMining'
        'body': """
            web3.eth.getMining(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.eth.hashrate':
        'prefix': 'web3.eth.hashrate'
        'body': 'web3.eth.hashrate;$0'
    'web3.eth.getHashrate':
        'prefix': 'web3.eth.getHashrate'
        'body': """
            web3.eth.getHashrate(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.eth.gasPrice':
        'prefix': 'web3.eth.gasPrice'
        'body': 'web3.eth.gasPrice;$0'
    'web3.eth.getGasPrice':
        'prefix': 'web3.eth.getGasPrice'
        'body': """
            web3.eth.getGasPrice(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.eth.accounts':
        'prefix': 'web3.eth.accounts'
        'body': 'web3.eth.accounts;$0'
    'web3.eth.getAccounts':
        'prefix': 'web3.eth.getAccounts'
        'body': """
            web3.eth.getAccounts(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.eth.blockNumber':
        'prefix': 'web3.eth.blockNumber'
        'body': 'web3.eth.blockNumber;$0'
    'web3.eth.getBlockNumber':
        'prefix': 'web3.eth.getBlockNumber'
        'body': """
            web3.eth.getBlockNumber(function (err, result) {
                ${1:// your code}
            });$0
        """
    'web3.eth.getBalance':
        'prefix': 'web.eth.getBalance'
        'body': 'web3.eth.getBalance(${1:addressHexString}${2:, ${3:blockNumber}}${4:, function (err, result) $5});$0'
        'description': 'blockNumber: number, "earliest", "latest" or "pending"'
    'web3.eth.getStorageAt':
        'prefix': 'web3.eth.getStorageAt'
        'body': 'web3.eth.getStorageAt(${1:addressHexString}, ${2:position}${3:, ${4:blockNumber}}${5:, function (err, result) $6});$0'
        'description': 'blockNumber: number, "earliest", "latest" or "pending"'
    'web3.eth.getCode':
        'prefix': 'web3.eth.getCode'
        'body': 'web3.eth.getCode(${1:addressHexString}${2:, ${3:blockNumber}}${4:, function (err, result) $5});$0'
        'description': 'blockNumber: number, "earliest", "latest" or "pending"'
    'web3.eth.getBlock':
        'prefix': 'web3.eth.getBlock'
        'body': 'web3.eth.getBlock(${1:blockNumber}${2:, ${3|true,false|}}${4:, function (err, result) $5});$0'
        'description': 'blockNumber: blockHash, number, "earliest", "latest" or "pending"'
    'web3.eth.getBlockTransactionCount':
        'prefix': 'web3.eth.getBlockTransactionCount'
        'body': 'web3.eth.getBlockTransactionCount(${1:blockNumber}${2:, function (err, result) $3});$0'
        'description': 'blockNumber: blockHash, number, "earliest", "latest" or "pending"'
    'web3.eth.getUncle':
        'prefix': 'web3.eth.getUncle'
        'body': 'web3.eth.getUncle(${1:blockHashOrNum}, ${2:uncleNumber$}${3:, ${4:trueOrFalse}}${5:, function (err, result) $6});$0'
    'web3.eth.getTransaction':
        'prefix': 'web3.eth.getTransaction'
        'body': 'web3.eth.getTransaction(${1:transactionHash}${2:, function (err, result) $3});$0'
    'web3.get.getTransactionFromBlock':
        'prefix': 'web3.eth.getTransactionFromBlock'
        'body': 'web3.eth.getTransactionFromBlock(${1:blockNumber}, ${2:index}${3:, function (err, result) $4});$0'
        'description': 'blockNumber: blockHash, number, "earliest", "latest" or "pending"'
    'web3.eth.getTransactionReceipt':
        'prefix': 'web3.eth.getTransactionReceipt'
        'body': 'web3.eth.getTransactionReceipt(${1:transactionHash}${2:, function (err, result) $3});$0'
    'web3.eth.getTransactionCount':
        'prefix': 'web3.eth.getTransactionCount'
        'body': 'web3.eth.getTransactionCount(${1:addressHexString}${2:, ${3:blockNumber}}${4:, function(err, result) $5});$0'
        'description': 'blockNumber: blockHash, number, "earliest", "latest" or "pending"'
    'web3.eth.sendTransaction':
        'prefix': 'web3.eth.sendTransaction'
        'body': 'web3.eth.sendTransaction(${1:transactionObject}${2:, function(err, result) $3});$0'
    'web3.eth.sendRawTransaction':
        'prefix': 'web3.eth.sendRawTransaction'
        'body': 'web3.eth.sendRawTransaction(${1:signedTransactionData}${2:, function(err, result) $3});$0'
    'web3.eth.sign':
        'prefix': 'web3.eth.sign'
        'body': 'web3.eth.sign(${1:address}, ${2:dataToSign}${3:, function(err, result)} $4);$0'
    'web3.eth.call':
        'prefix': 'web3.eth.call'
        'body': 'web3.eth.call(${1:callObject}${2:, ${3:blockNumber}}${4:, function(err, result)} $5);$0'
    'web3.eth.estimateGas':
        'prefix': 'web3.eth.estimateGas'
        'body': 'web3.eth.estimateGas(${1:callObject}${2:, function(err, result)} $3);$0'
    'web3.eth.filter':
        'prefix': 'web3.eth.filter'
        'body': 'web3.eth.filter(${1:params})'
        'description': 'params: "latest", "pending" or JSONobject'
    'web3.eth.contract':
        'prefix': 'web3.eth.contract'
        'body': 'web3.eth.contract(${1:abiArray});$0'
    'web3.eth.getCompilers':
        'prefix': 'web3.eth.getCompilers'
        'body': 'web3.eth.getCompilers(${1:function (err, result) $2} );$0'
    'web3.eth.namereg':
        'prefix': 'web3.eth.namereg'
        'body': 'web3.eth.namereg;$0'
    'web3.db.putString':
        'prefix': 'web3.db.putString'
        'body': 'web3.db.putString(${1:db}, ${2:key}, ${3:value});$0'
    'web3.db.getString':
        'prefix': 'web3.db.getString'
        'body': 'web3.db.getString(${1:db}, ${2:key});$0'
    'web3.db.putHex':
        'prefix': 'web3.db.putHex'
        'body': 'web3.db.putHex(${1:db}, ${2:key}, ${3:value});$0'
    'web3.db.getHex':
        'prefix': 'web3.db.getHex'
        'body': 'web3.db.getHex(${1:db}, ${2:key});$0'
    'web3,shh.hasIdentity':
        'prefix': 'web3.shh.hasIdentity'
        'body': 'web3.shh.hasIdentity(${1:identity}${2:, function (err, result) ${3}});$0'
    'web3.shh.filter':
        'prefix': 'web3.shh.filter'
        'body': 'web3.shh.filter(${1:jsonObject});$0'
    'web3.eth.sendIBANTransaction':
        'prefix': 'web3.eth.sendIBANTransaction'
        'body': 'web3.eth.sendIBANTransaction(${1:fromAddress}, {2:toIBANAddress}, {3:value});$0'
    'web3.eth.iban':
        'prefix': 'web3.eth.iban',
        'body': 'web3.eth.iban(${1:ibanAddress});$0'
    'web3.eth.iban.fromAddress':
        'prefix': 'web3.eth.iban.fromAddress',
        'body': 'web3.eth.iban.fromAddress(${1:address});$0'
    'web3.eth.iban.fromBban':
        'prefix': 'web3.eth.iban.fromBban',
        'body': 'web3.eth.iban.fromBban(${1:BbanAddress});$0'
    'web3.eth.iban.createIndirect':
        'prefix': 'web3.eth.iban.createIndirect',
        'body': 'web3.eth.iban.createIndirect(${1:jsonObj});$0'
    'web3.eth.iban.isValid':
        'prefix': 'web3.eth.iban.isValid',
        'body': 'web3.eth.iban.isValid(${1:ibanAddress});$0'
    'web3.eth.iban.isDirect':
        'prefix': 'web3.eth.iban.isDirect',
        'body': 'web3.eth.iban.isDirect(${1:ibanAddress});$0'
    'web3.eth.iban.isIndirect':
        'prefix': 'web3.eth.iban.isIndirect',
        'body': 'web3.eth.iban.isIndirect(${1:ibanAddress});$0'
    'web3.eth.iban.checksum':
        'prefix': 'web3.eth.iban.checksum',
        'body': 'web3.eth.iban.checksum(${1:ibanAddress});$0'
    'web3.eth.iban.institution':
        'prefix': 'web3.eth.iban.institution',
        'body': 'web3.eth.iban.institution(${1:ibanAddress});$0'
    'web3.eth.iban.client':
        'prefix': 'web3.eth.iban.client',
        'body': 'web3.eth.iban.client(${1:ibanAddress});$0'
    'web3.eth.iban.address':
        'prefix': 'web3.eth.iban.address',
        'body': 'web3.eth.iban.address(${1:ibanAddress});$0'
    'web3.eth.iban.toString':
        'prefix': 'web3.eth.iban.toString',
        'body': 'web3.eth.iban.toString(${1:ibanAddress});$0'
